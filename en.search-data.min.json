[{"id":0,"href":"/golden-cpp/about/","title":"About","parent":"","content":"This software is a personal template project.\nYou can find the welcome page here.\n"},{"id":1,"href":"/golden-cpp/documentation/","title":"Documentation","parent":"","content":"This is a minimal documentation for markdown language using Hugo.\n Get Started  Golden   \u0026hellip;  "},{"id":2,"href":"/golden-cpp/documentation/get-started/","title":"Get Started","parent":"Documentation","content":"Welcome to the official documentation of the Golden C/C++ Project    This template structure will be used for other documentations!\n"},{"id":3,"href":"/golden-cpp/documentation/get-started/golden/","title":"Golden","parent":"Get Started","content":"This tutorial is currently empty. Have a look to pandoc, a lightweight documentation converter!\nCommand line    cli_golden "},{"id":4,"href":"/golden-cpp/","title":"","parent":"","content":"Welcome to the golden cpp template       \nThis is a skeleton template for a C/C++ project. Please find all the documentation here and the source code here.\nMy development tools are     nix ‚ùÑÔ∏è (packaging from hell ‚ù§Ô∏è) clang-format (formatter) vscode (IDE) with  ms-vscode.cmake-tools ms-vscode.cpptools   ctest - or catch2 (unit testing) markdown (documentation)  Use the classic Nix commands    Use the software (without git clone)    The nokxpkgs channel and associate overlay can be imported with the -I command or by setting the NIX_PATH environment variable.\nnix-shell -I nixpkgs=https://github.com/nokx5/nokxpkgs/archive/main.tar.gz -p golden-cpp --command cli_golden Develop the software    Start by cloning the git repository locally and enter it.\nOption 1: Develop the software (minimal requirements)    You can develop or build the local software easily with the minimal requirements.\n# option a: develop with a local shell nix-shell --expr \u0026#39;{pkgs ? import \u0026lt;nixpkgs\u0026gt; {} }: with pkgs; callPackage ./derivation.nix {src = ./.; }\u0026#39; # option b: build the local project nix-build --expr \u0026#39;{pkgs ? import \u0026lt;nixpkgs\u0026gt; {} }: with pkgs; callPackage ./derivation.nix {src = ./.; }\u0026#39; Note that you can write the nix expression directly to the default.nix file to avoid typing --expr each time.\nOption 2: Develop the software (supercharged üõ∞Ô∏è)    You can enter the supercharged environment for development.\nnix-shell shell.nix Use the experimental flake feature    NOTE: This section requires the experimental flake and nix-command features. Please refer to the official documentation for nix flakes. The advantage of using nix flakes is that you avoid channel pinning issues.\nAfter Nix was installed, update to the unstable feature with:\nnix-env -f \u0026#39;\u0026lt;nixpkgs\u0026gt;\u0026#39; -iA nixUnstable And enable experimental features with:\nmkdir -p ~/.config/nix echo \u0026#39;experimental-features = nix-command flakes\u0026#39; \u0026gt;\u0026gt; ~/.config/nix/nix.conf Use the software (without git clone)    nix shell github:nokx5/golden-cpp --command cli_golden Develop the software    Start by cloning the git repository locally and enter it.\nOption 1: Develop the software    # option a: develop with a local shell nix develop .#golden-cpp # or nix-shell . -A packages.x86_64-linux.golden-cpp # option b: build the local project nix build .#golden-cpp # or nix-build . -A packages.x86_64-linux.golden-cpp Option 2: Develop the software (supercharged üõ∞Ô∏è)    You can enter the supercharged development environment.\nnix develop # or nix-shell . -A devShell.x86_64-linux Code Snippets    One line code formatter for C/C++ projects\nnixpkgs-fmt . clang-format -i $(find . -path \u0026#34;./build*\u0026#34; -prune -name \u0026#34;*.c\u0026#34; -o -name \u0026#34;*.cpp\u0026#34; -o -name \u0026#34;*.h\u0026#34; -o -name \u0026#34;*.hpp\u0026#34;) cmake-format -i $(find . -path \u0026#34;./build*\u0026#34; -prune -name \u0026#34;*.cmake\u0026#34; -o -name \u0026#34;CMakeLists.txt\u0026#34;) "},{"id":5,"href":"/golden-cpp/categories/","title":"Categories","parent":"","content":""},{"id":6,"href":"/golden-cpp/tags/","title":"Tags","parent":"","content":""}]